image:
  repository: target/vela-ui
  tag: v0.13.0
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.

## If you need to pull images from a private Docker image repository, pass in the name
## of a Kubernetes Secret that contains the needed secret. For more details, see:
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []
# - name: "image-pull-secret"

## For small or experimental deployments of the convert extension, 1 replica will suffice.
## For production cases, 2-3 are recommended. This does not grant additional parallelism,
## but does ensure that upgrades, config changes, and disruptions are handled more gracefully.
replicaCount: 1

nameOverride: ""
fullnameOverride: ""

## If you need to run Vela UI under a specific kubernetes service account, pass in
## the name and any annotations here.
serviceAccount:
  name: default

## Add extra annotations to the Vela UI deployment here.
deploymentAnnotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  # To change targetPort or scheme, you will need a custom image.
  # Customize the nginx conf in that image to change these.
  targetPort: 80
  # scheme should be http or https.
  # If you use https, make sure to specify mount them with extraVolumes.
  scheme: http

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## DNS settings (dnsPolicy, dnsConfig)

## https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
## "ClusterFirst" is the default. Other options: "Default", "ClusterFirstWithHostNet", "None"
#dnsPolicy: "ClusterFirst"
## https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
dnsConfig: {}
  # example copied from the docs
  #nameservers:
  #- 1.2.3.4
  #searches:
  #- ns1.svc.cluster-domain.example
  #- my.dns.search.suffix
  #options:
  #- name: ndots
  #  value: "2"
  #- name: edns0

## If you'd like to make additional files or volumes available to the worker, declare additional
## Volumes here per the Pod spec's "volumes" section.
## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
##
extraVolumes: []
## If you have declared extra volumes, mount them here, per the Pod Container's
## "volumeMounts" section.
##
extraVolumeMounts: []
#
extraVolumeMounts: []
## If you'd like to provide your own Kubernetes Secret object instead of passing your values
## in un-encrypted, pass in the name of a created + populated Secret in the same Namespace
## as the pod. All secrets within this configmap will be mounted as environment variables,
## with each key/value mapping to a corresponding environment variable on the pod.
##
extraSecretNamesForEnvFrom: []
# - my-vela-secrets

## The keys within the "env" map are mounted as environment variables on the conversion extension pod.
##
env:
  ## REQUIRED!
  ## Vela api server address. Should match the "VELA_ADDR" value provided to vela-server.
  ## Defaults to the "vela-server" service that the vela-server Chart creates by default.
  ## Usage: Vela server address as a fully qualified url (<scheme>://<host>)
  VELA_API: http://vela-server

  ## customize the location where you want users to provide feedback
  # VELA_FEEDBACK_URL: https://go-vela/community/issues/new/choose

  ## customize the location where you users can review documentation
  # VELA_DOCS_URL: https://go-vela.github.io/docs

  ## setting this to "development" turns on dev mode
  # NODE_ENV:
